name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Install TypeScript
        run: npm install typescript@latest --no-save --legacy-peer-deps
      
      - name: Lint
        run: npm run lint

  test:
    name: Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs: lint
    env:
      PUBLIC_SUPABASE_URL: ${{ secrets.PUBLIC_SUPABASE_URL }}
      PUBLIC_SUPABASE_KEY: ${{ secrets.PUBLIC_SUPABASE_KEY }}
      PUBLIC_OPENROUTER_API_KEY: ${{ secrets.PUBLIC_OPENROUTER_API_KEY }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Install TypeScript
        run: npm install typescript@latest --no-save --legacy-peer-deps
      
      - name: Create .env.test file
        run: |
          echo "PUBLIC_SUPABASE_URL=${{ secrets.PUBLIC_SUPABASE_URL }}" > .env.test
          echo "PUBLIC_SUPABASE_KEY=${{ secrets.PUBLIC_SUPABASE_KEY }}" >> .env.test
          echo "PUBLIC_OPENROUTER_API_KEY=${{ secrets.PUBLIC_OPENROUTER_API_KEY }}" >> .env.test
      
      - name: Run unit tests
        run: npm run test
      
      - name: Build for E2E tests
        run: npm run build
        
      - name: Cache build output for E2E
        uses: actions/cache@v4
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ github.sha }}
      
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium
      
      - name: Run E2E tests
        env:
          E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
          E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
          E2E_WAIT_TIMEOUT: "10000"
          E2E_PAGE_LOAD_WAIT: "5000"
        run: |
          # Tworzenie pliku .env.test z wszystkimi potrzebnymi zmiennymi
          echo "PUBLIC_SUPABASE_URL=${{ secrets.PUBLIC_SUPABASE_URL }}" > .env.test
          echo "PUBLIC_SUPABASE_KEY=${{ secrets.PUBLIC_SUPABASE_KEY }}" >> .env.test
          echo "PUBLIC_OPENROUTER_API_KEY=${{ secrets.PUBLIC_OPENROUTER_API_KEY }}" >> .env.test
          echo "E2E_USERNAME=${{ secrets.E2E_USERNAME }}" >> .env.test
          echo "E2E_PASSWORD=${{ secrets.E2E_PASSWORD }}" >> .env.test
          echo "E2E_WAIT_TIMEOUT=10000" >> .env.test
          echo "E2E_PAGE_LOAD_WAIT=5000" >> .env.test
          
          # Uruchom serwer i testy
          npm run dev:e2e &
          sleep 10
          npx wait-on --timeout 60000 http://localhost:3000
          PLAYWRIGHT_REUSE_SERVER=1 npm run test:e2e -- --workers=1
        timeout-minutes: 5
  
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs: test
    env:
      PUBLIC_SUPABASE_URL: ${{ secrets.PUBLIC_SUPABASE_URL }}
      PUBLIC_SUPABASE_KEY: ${{ secrets.PUBLIC_SUPABASE_KEY }}
      PUBLIC_OPENROUTER_API_KEY: ${{ secrets.PUBLIC_OPENROUTER_API_KEY }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      
      - name: Restore cached build
        uses: actions/cache@v4
        id: restore-build
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ github.sha }}
      
      - name: Install dependencies
        if: steps.restore-build.outputs.cache-hit != 'true'
        run: npm ci --legacy-peer-deps
      
      - name: Install TypeScript
        if: steps.restore-build.outputs.cache-hit != 'true'
        run: npm install typescript@latest --no-save --legacy-peer-deps
      
      - name: Build
        if: steps.restore-build.outputs.cache-hit != 'true'
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: dist/
          retention-days: 7
          compression-level: 9 